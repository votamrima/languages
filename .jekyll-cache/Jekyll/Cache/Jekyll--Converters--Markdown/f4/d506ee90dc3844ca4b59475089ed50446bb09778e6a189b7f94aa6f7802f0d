I"L<h3 id="set-ip-nfs-server-and-export-a-created-share">Set ip NFS Server and export a created share.</h3>

<p>A simple NFS is described <a href="/languages/creating-simple-nfs-share/">here</a>.</p>

<h3 id="configure-registry">Configure registry</h3>
<p>For creating an persistent volume I used to create setup_pv.yaml file with the following content:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim setup_pv.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: test-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /opt/okdn_share/test
    server: 192.168.11.61
</code></pre></div></div>

<p>Then, using oc create command I applied setup_pv.yml:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>oc create -f setup_pv.yml
</code></pre></div></div>

<p>A <code class="language-plaintext highlighter-rouge">oc get pv</code> command shows created persistence volumes. In my case I have only one.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[admin@dns try]$ oc get pv
NAME      CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE
test-pv   10Gi       RWX            Retain           Available                                   22h
[admin@dns try]$ 
</code></pre></div></div>

<p>Afterwards, I started to edit image-registry operator:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[admin@dns try]$ oc edit configs.imageregistry.operator.openshift.io 

........
spec:
  logLevel: Normal
  managementState: Removed
  observedConfig: null
  operatorLogLevel: Normal
  proxy: {}
  replicas: 1
  requests:
    read:
      maxWaitInQueue: 0s
    write:
      maxWaitInQueue: 0s
  rolloutStrategy: RollingUpdate
  storage: {}
  unsupportedConfigOverrides: null
........
</code></pre></div></div>

<p>Here I did two changes under the <code class="language-plaintext highlighter-rouge">spec</code> section. It was chaged <code class="language-plaintext highlighter-rouge">managementState</code> field from “Removed” to “Managed” and enabled <code class="language-plaintext highlighter-rouge">storage</code>. The final version of <strong>spec</strong> section section is shown below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>spec:
  logLevel: Normal
  managementState: Managed
  observedConfig: null
  operatorLogLevel: Normal
  proxy: {}
  replicas: 1
  requests:
    read:
      maxWaitInQueue: 0s
    write:
      maxWaitInQueue: 0s
  rolloutStrategy: RollingUpdate
  storage: 
    pvc:
      claim:
  unsupportedConfigOverrides: null
</code></pre></div></div>

:ET